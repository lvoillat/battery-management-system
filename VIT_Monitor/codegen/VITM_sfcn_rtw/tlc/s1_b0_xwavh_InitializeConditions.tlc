%implements s1_b0_xwavh_InitializeConditions "C"

%function InitializeConditions(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
int32_T i;
%closefile localVarDecl
%<SLibInsertAsyncTaskInitializeCode(system)>
%<SLibWriteMachineInitialize()>
/* InitializeConditions for Atomic SubSystem: '<Root>/VITM' */
/* InitializeConditions for Delay: '<S11>/Delay1' */
%<SLibCG_SetDWV(0, 0, 1, 1, "", -1, "", 0, "0.0")>\
/* InitializeConditions for Delay: '<S7>/Resettable Delay3' */
%<SLibCG_SetDWV(1, 0, 1, 1, "", -1, "", 0, "0.0")>\
/* InitializeConditions for Delay: '<S12>/Delay1' */
%<SLibCG_SetDWV(2, 0, 1, 1, "", -1, "", 0, "0.0")>\
/* InitializeConditions for Delay: '<S8>/Resettable Delay3' */
%<SLibCG_SetDWV(3, 0, 1, 1, "", -1, "", 0, "0.0")>\
/* InitializeConditions for Delay: '<S5>/Resettable Delay' */
%<SLibCG_SetDWV(5, 0, 1, 1, "", -1, "", 0, "0.0")>\
/* InitializeConditions for Delay: '<S5>/Resettable Delay1' */
%<SLibCG_SetDWV(6, 0, 1, 1, "", -1, "", 0, "0.0")>\
/* InitializeConditions for Delay: '<S3>/Delay' */
%<SLibCG_SetDWV(8, 0, 1, 1, "", -1, "", 0, "0.0")>\
/* InitializeConditions for Delay: '<S6>/Resettable Delay' */
%<SLibCG_SetDWV(9, 0, 1, 1, "", -1, "", 0, "0.0")>\
/* InitializeConditions for Delay: '<S6>/Resettable Delay1' */
%<SLibCG_SetDWV(10, 0, 1, 1, "", -1, "", 0, "0.0")>\
/* InitializeConditions for Delay: '<S15>/Delay' */
%<SLibCG_SetDWV(11, 0, 1, 1, "", -1, "", 0, "0.0")>\
for (i = 0; i < 40; i++) {
    /* InitializeConditions for Delay: '<S10>/Delay1' */
%<SLibCG_SetDWV(4, 0, 1, 40, "", -1, "i", 0, "0.0")>\
    /* InitializeConditions for Delay: '<S2>/Delay' */
%<SLibCG_SetDWV(7, 0, 1, 40, "", -1, "i", 0, "0.0")>\
    /* InitializeConditions for Delay: '<S15>/Delay1' */
%<SLibCG_SetDWV(12, 0, 1, 40, "", -1, "i", 0, "0.0")>\
}
/* InitializeConditions for Delay: '<S15>/Resettable Delay2' */
%<SLibCG_SetDWV(13, 0, 1, 1, "", -1, "", 0, "0.0")>\
/* InitializeConditions for Delay: '<S9>/Delay1' */
%<SLibCG_SetDWV(14, 0, 1, 1, "", -1, "", 0, "0.0")>\
/* InitializeConditions for Delay: '<S14>/Resettable Delay3' */
%<SLibCG_SetDWV(15, 0, 1, 1, "", -1, "", 0, "0.0")>\
/* InitializeConditions for Delay: '<S13>/Resettable Delay3' */
%<SLibCG_SetDWV(16, 0, 1, 1, "", -1, "", 0, "0.0")>\
/* InitializeConditions for Delay: '<S4>/Delay' */
%<SLibCG_SetDWV(17, 0, 1, 1, "", -1, "", 0, "0.0")>\
/* End of InitializeConditions for SubSystem: '<Root>/VITM' */
%<SLibInsertInitPeriodicCStatesFcn(system)>
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Initialize", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Initialize"))
%<SLibCG_AccessArg(0, 0, 0)>
%endif
%if SLibCG_ArgAccessed(0, 0, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Initialize", rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Initialize"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface))
%<SLibCG_UndoAccessArg(0, 0, 0)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void InitializeConditions(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 0, 0)
%<comma>%<tSimStructType> *%<tSimStruct>\
%assign comma = ", "
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 0, fcnProtoType)>
%<LibSetSystemField(system, "CachedInitializeLocalVars", localVarDecl)>
%endfunction
