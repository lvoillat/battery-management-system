%implements s13_b0_etgpi_ModelPrevZCStateInit "C"

%function ModelPrevZCStateInit(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
PrevZCX_BSC_T *_rtZCE;
%closefile localVarDecl
%<SLibCG_TrackZCEvent(13)>\
_rtZCE = %<(SLibCG_SE(SLibGetPreviousZCStructPtr()))>;
_rtZCE->TriggeredSubsystem_Trig_ZCE = UNINITIALIZED_ZCSIG;
_rtZCE->key_cycle.key_cycle_chart_Trig_ZCE[0] = UNINITIALIZED_ZCSIG;
_rtZCE->key_cycle.key_cycle_chart_Trig_ZCE[1] = UNINITIALIZED_ZCSIG;
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[6].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("ModelPrevZCStateInit", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "ModelPrevZCStateInit"))
%<SLibCG_AccessArg(6, 2, 0)>
%endif
%if SLibCG_ArgAccessed(6, 2, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "ModelPrevZCStateInit", rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "ModelPrevZCStateInit"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface))
%<SLibCG_UndoAccessArg(6, 2, 0)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void ModelPrevZCStateInit(\
%assign comma = ""
%if SLibCG_ArgAccessed(6, 2, 0)
%<comma>%<tSimStructType> *%<tSimStruct>\
%assign comma = ", "
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(6, 2, fcnProtoType)>
%<LibSetSystemField(system, "CachedModelPrevZCStateInitLocalVars", localVarDecl)>
%endfunction
