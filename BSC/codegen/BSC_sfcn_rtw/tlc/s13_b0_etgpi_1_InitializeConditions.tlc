%implements s13_b0_etgpi_1_InitializeConditions "C"

%function InitializeConditions(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* InitializeConditions for Chart: '<S6>/key_cycle_chart' */
%<SLibCG_SetDWV(8, 0, 4, 1, "", -1, "", 0, "0U")>\
%<SLibCG_SetDWV(7, 0, 4, 1, "", -1, "", 0, "BSC_IN_NO_ACTIVE_CHILD_f")>\
%<SLibCG_SetDWV(3, 0, 4, 1, "", -1, "", 0, "0U")>\
%<SLibCG_SetDWV(4, 0, 4, 1, "", -1, "", 0, "0U")>\
%<SLibCG_SetDWV(5, 0, 4, 1, "", -1, "", 0, "0U")>\
%<SLibCG_SetDWV(6, 0, 4, 1, "", -1, "", 0, "0U")>\
localB->key_cycle = 1U;
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[1].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Initialize", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Initialize"))
%<SLibCG_AccessArg(1, 3, 0)>
%endif
%if SLibCG_ArgAccessed(1, 3, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Initialize", rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Initialize"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface))
%<SLibCG_UndoAccessArg(1, 3, 0)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void BSC_key_cycle_Init(\
%assign comma = ""
%if SLibCG_ArgAccessed(1, 3, 0)
%<comma>%<tSimStructType> * const %<tSimStruct>\
%assign comma = ", "
%endif
%<comma>B_key_cycle_BSC_T *localB\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 3, fcnProtoType)>
%endfunction
