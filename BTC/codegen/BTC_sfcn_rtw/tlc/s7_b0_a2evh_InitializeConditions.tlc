%implements s7_b0_a2evh_InitializeConditions "C"

%function InitializeConditions(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%<SLibInsertAsyncTaskInitializeCode(system)>
%<SLibWriteMachineInitialize()>
/* InitializeConditions for Atomic SubSystem: '<Root>/BTC' */
/* InitializeConditions for Delay: '<S3>/Delay' */
%<SLibCG_SetDWV(0, 0, 7, 1, "", -1, "", 0, "26.0")>\
/* InitializeConditions for DiscreteIntegrator: '<S4>/Discrete-Time Integrator' */
%<SLibCG_SetDWV(1, 0, 7, 1, "", -1, "", 0, "0.0")>\
/* InitializeConditions for Delay: '<S3>/Delay1' */
%<SLibCG_SetDWV(2, 0, 7, 2, "", -1, "", 0, "false")>\
%<SLibCG_SetDWV(2, 0, 7, 2, "", -1, "", 1, "false")>\
/* End of InitializeConditions for SubSystem: '<Root>/BTC' */
%<SLibInsertInitPeriodicCStatesFcn(system)>
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Initialize", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Initialize"))
%<SLibCG_AccessArg(0, 0, 0)>
%endif
%if SLibCG_ArgAccessed(0, 0, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Initialize", rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Initialize"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface))
%<SLibCG_UndoAccessArg(0, 0, 0)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void InitializeConditions(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 0, 0)
%<comma>%<tSimStructType> *%<tSimStruct>\
%assign comma = ", "
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 0, fcnProtoType)>
%endfunction
