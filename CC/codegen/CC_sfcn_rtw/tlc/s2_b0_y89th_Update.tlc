%implements s2_b0_y89th_Update "C"

%function Update(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
B_CC_T *_rtB;
%closefile localVarDecl
%<SLibCG_TrackBlockIO(2)>\
_rtB = %<(SLibCG_SE(SLibGetBlockIOStructPtr()))>;
/* Update for Atomic SubSystem: '<Root>/CC' */
/* Update for Delay: '<S1>/Delay2' */
%<SLibCG_SetDWV(2, 0, 2, 1, "", -1, "", 0, "_rtB->LogicalOperator2")>\
/* Update for Delay: '<S1>/Resettable Delay' */
%<SLibCG_SetDWV(5, 0, 2, 1, "", -1, "", 0, "0U")>\
%<SLibCG_SetDWV(0, 0, 2, 1, "", -1, "", 0, "_rtB->Add")>\
/* Update for Delay: '<S1>/Delay1' */
%<SLibCG_SetDWV(3, 0, 2, 1, "", -1, "", 0, "_rtB->RelationalOperator4")>\
/* Update for Delay: '<S1>/Delay' */
%<SLibCG_SetDWV(4, 0, 2, 1, "", -1, "", 0, "_rtB->LogicalOperator2")>\
/* End of Update for SubSystem: '<Root>/CC' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Update", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Update"))
%<SLibCG_AccessArg(0, 3, 0)>
%endif
%if SLibCG_ArgAccessed(0, 3, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Update", rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Update"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface))
%<SLibCG_UndoAccessArg(0, 3, 0)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Update(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 3, 0)
%<comma>%<tSimStructType> *%<tSimStruct>\
%assign comma = ", "
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 3, fcnProtoType)>
%<LibSetSystemField(system, "CachedUpdateLocalVars", localVarDecl)>
%endfunction
