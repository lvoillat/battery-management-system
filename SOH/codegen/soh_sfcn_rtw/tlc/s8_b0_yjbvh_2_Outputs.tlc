%implements s8_b0_yjbvh_2_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
real_T minV;
real_T minV_0;
real_T rtb_Sum2[40];
real_T rtb_Sum1[40];
int32_T i;
B_soh_T *_rtB;
%closefile localVarDecl
%<SLibCG_TrackBlockIO(8)>\
_rtB = %<(SLibCG_SE(SLibGetBlockIOStructPtr()))>;
%<SLibCG_TrackEO(4)>\
/* Sum: '<S7>/Sum2' incorporates:
 *  Delay: '<S7>/Delay3'
 *  Gain: '<S7>/Gain6'
 *  Gain: '<S7>/Gain7'
 */
for (i = 0; i < 40; i++) {
    rtb_Sum2[i] = (1.0 - %<(SLibCG_SE(SLibCGIR_PV(4, 0, 2, 1, "", -1, "", 0)))>) * _rtB->init.DataStoreRead1[i] + %<(SLibCG_SE(SLibCGIR_PV(4, 0, 2, 1, "", -1, "", 0)))> * %<(SLibCG_SE(SLibCG_DWV(2, 0, 8, 40, "", -1, "i", 0)))>;
}
/* End of Sum: '<S7>/Sum2' */

/* MinMax: '<S7>/MinMax' */
minV = rtb_Sum2[0];
for (i = 0; i < 39; i++) {
    if (!((minV <= rtb_Sum2[i + 1]) || rtIsNaN(rtb_Sum2[i + 1]))) {
        minV = rtb_Sum2[i + 1];
    }
}
/* Sum: '<S7>/Sum1' incorporates:
 *  Delay: '<S7>/Delay1'
 *  Gain: '<S7>/Gain1'
 *  Gain: '<S7>/Gain2'
 */
for (i = 0; i < 40; i++) {
    rtb_Sum1[i] = (1.0 - %<(SLibCG_SE(SLibCGIR_PV(4, 0, 2, 1, "", -1, "", 0)))>) * _rtB->init.soc_C_factors_init[i] + %<(SLibCG_SE(SLibCGIR_PV(4, 0, 2, 1, "", -1, "", 0)))> * %<(SLibCG_SE(SLibCG_DWV(1, 0, 8, 40, "", -1, "i", 0)))>;
}
/* End of Sum: '<S7>/Sum1' */

/* MinMax: '<S7>/MinMax1' */
minV_0 = rtb_Sum1[0];
for (i = 0; i < 39; i++) {
    if (!((minV_0 <= rtb_Sum1[i + 1]) || rtIsNaN(rtb_Sum1[i + 1]))) {
        minV_0 = rtb_Sum1[i + 1];
    }
}
/* MinMax: '<S7>/MinMax2' incorporates:
 *  MinMax: '<S7>/MinMax'
 *  MinMax: '<S7>/MinMax1'
 */
if ((minV <= minV_0) || rtIsNaN(minV_0)) {
    minV_0 = minV;
}
/* Gain: '<S7>/Gain' incorporates:
 *  MinMax: '<S7>/MinMax2'
 */
_rtB->Gain_c = 100.0 * minV_0;
/* Outport: '<S7>/soh_customer_index' */
((real_T *)ssGetOutputPortSignal(%<tSimStruct>, 4))[0] = _rtB->Gain_c;
/* Update for Delay: '<S7>/Delay1' incorporates:
 *  Update for Delay: '<S7>/Delay3'
 */
memcpy(%<(SLibCG_DWVAddr(1, 0, 8, 40, "", -1, "", 0))>, &rtb_Sum1[0], 40U * sizeof(real_T));
/* Update for Delay: '<S7>/Delay3' incorporates:
 *  Update for Delay: '<S7>/Delay1'
 */
memcpy(%<(SLibCG_DWVAddr(2, 0, 8, 40, "", -1, "", 0))>, &rtb_Sum2[0], 40U * sizeof(real_T));
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[2].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(2, 1, 0)>
%endif
%if SLibCG_ArgAccessed(2, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface))
%<SLibCG_UndoAccessArg(2, 1, 0)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void soh_key_on(\
%assign comma = ""
%<comma>%<tSimStructType> * const %<tSimStruct>\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(2, 1, fcnProtoType)>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
